function g(e){window.enmity.plugins.registerPlugin(e)}window.enmity.modules.common.Constants,window.enmity.modules.common.Clipboard,window.enmity.modules.common.Assets,window.enmity.modules.common.Messages,window.enmity.modules.common.Clyde,window.enmity.modules.common.Avatars,window.enmity.modules.common.Native;const r=window.enmity.modules.common.React;window.enmity.modules.common.Dispatcher,window.enmity.modules.common.Storage,window.enmity.modules.common.Toasts,window.enmity.modules.common.Dialog,window.enmity.modules.common.Token,window.enmity.modules.common.REST,window.enmity.modules.common.Settings,window.enmity.modules.common.Users,window.enmity.modules.common.Navigation,window.enmity.modules.common.NavigationNative,window.enmity.modules.common.NavigationStack,window.enmity.modules.common.Theme,window.enmity.modules.common.Linking,window.enmity.modules.common.StyleSheet,window.enmity.modules.common.ColorMap,window.enmity.modules.common.Components,window.enmity.modules.common.Locale,window.enmity.modules.common.Profiles,window.enmity.modules.common.Lodash,window.enmity.modules.common.Logger,window.enmity.modules.common.Flux,window.enmity.modules.common.SVG,window.enmity.modules.common.Scenes,window.enmity.modules.common.Moment;function a(...e){return window.enmity.modules.getByProps(...e)}window.enmity.modules.common;function y(e){return window.enmity.patcher.create(e)}var S="BackportForward",p="1.0.0",h="Forwarding for users running lower versions.",F=[{name:"byeoon",id:"263689920210534400"}],i={name:S,version:p,description:h,authors:F};const{components:o}=window.enmity;o.Alert,o.Button,o.FlatList,o.Image,o.ImageBackground,o.KeyboardAvoidingView,o.Modal,o.Pressable,o.RefreshControl,o.ScrollView,o.SectionList,o.StatusBar,o.StyleSheet,o.Switch,o.Text,o.TextInput,o.TouchableHighlight,o.TouchableOpacity,o.TouchableWithoutFeedback,o.Touchable,o.View,o.VirtualizedList,o.Form,o.FormArrow,o.FormCTA,o.FormCTAButton,o.FormCardSection,o.FormCheckbox,o.FormDivider,o.FormHint,o.FormIcon,o.FormInput,o.FormLabel,o.FormRadio;const A=o.FormRow;o.FormSection,o.FormSelect,o.FormSubLabel;const T=o.FormSwitch;o.FormTernaryCheckBox,o.FormText,o.FormTextColors,o.FormTextSizes;var v=({settings:e})=>r.createElement(A,{label:"Example Setting",trailing:r.createElement(T,{value:e.get("example",!0),onValueChange:()=>e.toggle("example",!0)})});a("startTyping");const s=y("silent-typing");a("getMessage","getMessages");const m=a("_currentDispatchActionType","_subscriptions","_waitQueue"),E={...i,onStart(){m.dispatch({type:"LOAD_MESSAGES"}),m.dispatch({type:"LOAD_MESSAGES_SUCCESS",channelId:0,messages:[],isBefore:!1,isAfter:!1,hasMoreBefore:!1,hasMoreAfter:!1,limit:25,jump:void 0,isStale:!1,truncate:void 0});let e=0,d=3;const l=()=>{try{e++,console.log(`[${i.name}] delayed start attempt ${e}/${d}.`);const c=m._actionHandlers._orderedActionHandlers.MESSAGE_CREATE.find(n=>n.name==="MessageStore"),w=m._actionHandlers._orderedActionHandlers.MESSAGE_UPDATE.find(n=>n.name==="MessageStore"),u=m._actionHandlers._orderedActionHandlers.LOAD_MESSAGES_SUCCESS.find(n=>n.name==="MessageStore");s.before(c,"actionHandler",(n,t)=>{console.log(t[0])}),s.before(w,"actionHandler",(n,t)=>{console.log(t[0])}),s.before(u,"actionHandler",(n,t)=>{t[0].messages=t[0].messages.map(f=>{console.log(t[0])})})}catch{e<d?(console.warn(`${i.name} failed to start. Trying again in ${e}0s.`),setTimeout(l,e*1e4)):console.error(`${i.name} failed to start. Giving up.`)}};setTimeout(()=>{l()},300)},onStop(){s.unpatchAll()},getSettingsPanel({settings:e}){return r.createElement(v,{settings:e})}};g(E);
